#N canvas 942 126 895 670 12;
#X obj 43 441 hidraw;
#X obj 71 144 hradio 15 1 0 8 empty empty empty 0 -8 0 10 #fcfcfc #000000 #000000 0;
#X listbox 74 526 57 0 0 0 - - - 0;
#X obj 44 566 unpack 0 0 0 0 0 0 0 0, f 55;
#X floatatom 44 614 5 0 0 0 - - - 0;
#X floatatom 98 614 5 0 0 0 - - - 0;
#X floatatom 153 614 5 0 0 0 - - - 0;
#X floatatom 207 614 5 0 0 0 - - - 0;
#X floatatom 262 614 5 0 0 0 - - - 0;
#X floatatom 316 614 5 0 0 0 - - - 0;
#X floatatom 371 614 5 0 0 0 - - - 0;
#X floatatom 426 614 5 0 0 0 - - - 0;
#X obj 44 500 route 0 1;
#X obj 44 590 change;
#X obj 98 590 change;
#X obj 153 590 change;
#X obj 207 590 change;
#X obj 262 590 change;
#X obj 316 590 change;
#X obj 371 590 change;
#X obj 426 590 change;
#X obj 44 470 list prepend 0;
#X obj 139 443 hradio 15 1 0 2 empty empty empty 0 -8 0 10 #fcfcfc #000000 #000000 0;
#N canvas 156 156 563 451 hid-permissions 0;
#X obj 63 61 inlet;
#X obj 107 361 pdcontrol;
#X msg 60 127 browse https://www.google.com/search?q=linux+hid+permissions;
#X msg 88 191 browse https://www.google.com/search?q=macos+hid+permissions;
#X obj 166 56 inlet;
#N canvas 407 159 645 318 hidrawonwindows 0;
#X text 80 129 On Windows [hidraw] can't read from "mouses" or "keyboards". Other HIDs (like "gamepads" or "joystcks") should work out of the box., f 66;
#X restore 256 368 pd hidrawonwindows;
#X f 19;
#X obj 270 54 inlet;
#X msg 257 314 vis 1;
#X obj 255 343 s pd-hidrawonwindows;
#X msg 137 258 browse https://github.com/Lucarda/pd-hidraw;
#X obj 143 227 r github;
#X connect 0 0 2 0;
#X connect 2 0 1 0;
#X connect 3 0 1 0;
#X connect 4 0 3 0;
#X connect 6 0 7 0;
#X connect 7 0 8 0;
#X connect 9 0 1 0;
#X connect 10 0 9 0;
#X restore 639 199 pd hid-permissions;
#X obj 639 118 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000;
#X text 719 141 macOS;
#X text 657 117 Linux;
#X obj 700 142 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000;
#X text 625 519 1st: <list> raw bytes;
#X text 624 540 2nd: <float>;
#X text 655 561 -1 = read error;
#X text 662 579 1 = waiting;
#X text 662 597 2 = read Ok;
#X text 591 494 outlets:;
#X text 589 279 inlet:;
#X msg 209 339 poll 0;
#X text 245 303 poll every <n> milliseconds;
#X text 262 339 0 to stop polling;
#X msg 192 304 poll 5;
#X obj 762 164 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000;
#X text 781 163 Windows;
#X msg 71 188 open \$1;
#X msg 184 269 close;
#X msg 94 228 open-vidpid 2064 1;
#X text 82 74 <-- first this. it will give the "Pd device enum" to use with "open" \, (scroll the console)., f 61;
#X floatatom 71 165 5 0 0 0 - - - 0;
#X msg 107 269 open 0;
#X text 230 268 close hid;
#X text 159 268 or;
#X text 235 195 open device via VID PID (shown in the console if you did "listdevices"). Note that the VID PID is hard-coded in the device and this can be used (later) without a prior "listdevices" message., f 42;
#X text 199 139 this opens the corresponding "path" to the "Pd device enum". Note that you have to do "listdevices" to fill the internal enumeration., f 52;
#X obj 42 33 cnv 10 300 6 empty empty hidraw 0 0 0 28 #dfdfdf #404040 0;
#X text 172 39 read raw bytes from HIDs;
#X obj 836 29 bng 15 250 50 0 github empty empty 17 7 0 10 #ffffff #000000 #000000;
#X text 726 27 github repo -->;
#X text 627 306 listdevices;
#X text 627 326 open <float>;
#X text 627 346 open-vidpid <float> <float>;
#X text 627 391 close;
#X text 627 433 poll <float>;
#X obj 720 453 cnv 19 130 19 empty empty !USE\ AT\ OWN\ RISK! 5 10 0 12 #ff0400 #ffffff 0;
#X text 627 453 write <list>;
#N canvas 731 397 464 229 more 0;
#X text 18 23 Writing to HID devices using this method may cause unintended behavior and could potentially damage the device if incorrect data is sent. Ensure you understand the deviceâ€™s capabilities and supported commands before using the write method.;
#X text 18 104 hidraw expects a report ID as the first number in the list of bytes. The "write" method will validate your input against the report size and ID that were parsed from the description. It will refuse to write if these don't match.;
#X text 18 170 If you really know what you're doing \, you may use the "writeunsafe" method \, which skips this validation.;
#X restore 720 476 pd more on "write";
#X msg 220 374 read;
#X text 258 373 or;
#X msg 281 374 bang;
#X text 627 412 bang / read;
#X text 318 373 to manually trigger read;
#X msg 238 411 describe;
#X text 627 368 describe;
#X text 303 411 to output report descriptor;
#X msg 43 79 scan;
#X msg 53 116 info 1;
#X text 105 116 get more info on a specific device (in this example: 1);
#X connect 0 0 21 0;
#X connect 1 0 45 0;
#X connect 3 0 13 0;
#X connect 3 1 14 0;
#X connect 3 2 15 0;
#X connect 3 3 16 0;
#X connect 3 4 17 0;
#X connect 3 5 18 0;
#X connect 3 6 19 0;
#X connect 3 7 20 0;
#X connect 12 0 3 0;
#X connect 12 1 2 0;
#X connect 13 0 4 0;
#X connect 14 0 5 0;
#X connect 15 0 6 0;
#X connect 16 0 7 0;
#X connect 17 0 8 0;
#X connect 18 0 9 0;
#X connect 19 0 10 0;
#X connect 20 0 11 0;
#X connect 21 0 12 0;
#X connect 22 0 21 1;
#X connect 24 0 23 0;
#X connect 27 0 23 1;
#X connect 35 0 0 0;
#X connect 38 0 0 0;
#X connect 39 0 23 2;
#X connect 41 0 0 0;
#X connect 42 0 0 0;
#X connect 43 0 0 0;
#X connect 45 0 41 0;
#X connect 46 0 0 0;
#X connect 63 0 0 0;
#X connect 65 0 0 0;
#X connect 68 0 0 0;
#X connect 71 0 0 0;
#X connect 72 0 0 0;
